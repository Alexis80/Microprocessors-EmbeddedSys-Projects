#include "project.h"
#include "stdio.h"

CY_ISR_PROTO(my_isr);

CY_ISR(my_isr)
{
    // one time initialization of count used to toggle between values
    static int count = 0;   
          
    // drives VDAC8 to 1/4 full scale and 3/4 full scale
    if (count == 0)
    {
        VDAC8_SetValue(64);
    }
    else
    {
        VDAC8_SetValue(192);
    }

    isr_1_ClearPending();
    // toggles between 0 and 1
    count = 1 - count;      
}

int
main( void )

{
    // sar_result holds result from ADC_SAR
    int     sar_result;     
    // holds integer part and fractional part of volts respectively
    int     volts_int;      
    int     volts_frac; 
    // char array that  holds exactly one line for display
    char    disp_str[17];   
    // floating point voltage result
    double  volts;          
    /* Enable global interrupts. */
    CyGlobalIntEnable; 
    
    // Initializes the converters, ADC starts converting, and calling the function
    ADC_SAR_Start();
    ADC_SAR_StartConvert();     
    VDAC8_Start();
    isr_1_StartEx(my_isr);
    LCD_Char_Start();
    
        // Loops forever
        while (1)
        {
            // get new ADC value
            sar_result = ADC_SAR_GetResult16();                         
        
            //converts sar_result to the corresponding floating point voltage
            volts = (2.048 * sar_result)/1023;

            // get integer part of volts
            volts_int = (int) volts;
            // get fractional part of volts as 3 digit int     
            volts_frac = (int) ((volts - volts_int) * 1000 + 0.5);      

            // Display the string on top line, left justified
            LCD_Char_ClearDisplay();
            LCD_Char_Position(0, 0);
            sprintf( disp_str, "code=%4d", sar_result);
            LCD_Char_PrintString(disp_str);

            // Display the string on bottom line, left justified
            LCD_Char_Position(1, 0);
            sprintf( disp_str, "volts=%d.%03d", volts_int, volts_frac );
            LCD_Char_PrintString(disp_str);

            //delay to allow display to stabilize
            CyDelay(500);                                               
    }
}

